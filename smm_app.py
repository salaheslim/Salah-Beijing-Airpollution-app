# -*- coding: utf-8 -*-
"""smm.app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TIX-5JvddtS6rbvMKbhNnrNraGof7YqE
"""

!pip install streamlit

import streamlit as st
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
import numpy as np

# Load dataset
@st.cache
def load_data():
    return pd.read_csv('/content/drive/MyDrive/data sets/Merged cities /analyzed_data.csv')

st.title("Modeling and Prediction")
data = load_data()

# Select Features and Target
st.header("Feature Selection")
features = st.multiselect("Select Predictors", data.columns, default=['TEMP', 'PRES', 'DEWP', 'RAIN', 'WSPM', 'PM10', 'NO2'])
target = st.selectbox("Select Target Variable", data.columns, index=data.columns.tolist().index('CO'))

# Split Data
X = data[features]
y = data[target]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Model
st.header("Train Model")
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)
y_pred = rf_model.predict(X_test)

# Display Metrics
st.subheader("Model Performance")
r2 = r2_score(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
st.write(f"RÂ²: {r2:.2f}")
st.write(f"MAE: {mae:.2f}")
st.write(f"RMSE: {rmse:.2f}")

# Make Predictions
st.header("Make a Prediction")
input_data = {feature: st.number_input(f"Enter {feature}", value=float(X_test[feature].mean())) for feature in features}
input_df = pd.DataFrame([input_data])
prediction = rf_model.predict(input_df)[0]
st.write(f"Predicted {target}: {prediction:.2f}")